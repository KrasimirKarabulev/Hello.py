class MissingParameterError(Exception):
    pass
class InvalidParameterError(Exception):
    def __init__(self, name, *args):
        message = f"Invalid class parameter: {name}"
        super().__init__(message, *args)
        # try:
        #     raise InvalidParameterError("name")
        # except InvalidParameterError as e:
        #     print("dadddad", str(e))
    #DOVURSHI
class InvalidAgeError(InvalidParameterError):
    def __init__(self, name, age):
        super().__init__(name)
        self.name=age

class InvalidSoundError(InvalidParameterError):
    def __init__(self, name, sound):
        super().__init__(name)
        self.name=sound

class JungleAnimal():
    def __init__(self, name, age, sound):
        self.name=name
        self.age=age
        self.sound=sound
        if type(self.name)!= str:
            raise InvalidParameterError("name")
        if type(self.age)!=int:
            raise InvalidAgeError()
        if type(self.sound)!=str:
            raise InvalidSoundError

    def make_sound():
        # print(f"{name} says {sound}")
        pass
    def print():
        pass
    def daily_task():
        pass

class Jaguar(JungleAnimal):
    def __init__(self, name, age, sound):
        super().__init__(name, age, sound)
    

